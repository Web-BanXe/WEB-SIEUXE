#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Vehicle_Recovery.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Vehicle")]
	public partial class VehicleDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAdmin(Admin instance);
    partial void UpdateAdmin(Admin instance);
    partial void DeleteAdmin(Admin instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    partial void InsertXe(Xe instance);
    partial void UpdateXe(Xe instance);
    partial void DeleteXe(Xe instance);
    partial void InsertDongXe(DongXe instance);
    partial void UpdateDongXe(DongXe instance);
    partial void DeleteDongXe(DongXe instance);
    partial void InsertHangXe(HangXe instance);
    partial void UpdateHangXe(HangXe instance);
    partial void DeleteHangXe(HangXe instance);
    partial void InsertThongSo(ThongSo instance);
    partial void UpdateThongSo(ThongSo instance);
    partial void DeleteThongSo(ThongSo instance);
    partial void InsertDonDatHang(DonDatHang instance);
    partial void UpdateDonDatHang(DonDatHang instance);
    partial void DeleteDonDatHang(DonDatHang instance);
    partial void InsertCTDDH(CTDDH instance);
    partial void UpdateCTDDH(CTDDH instance);
    partial void DeleteCTDDH(CTDDH instance);
    #endregion
		
		public VehicleDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["VehicleConnectionString1"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public VehicleDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public VehicleDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public VehicleDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public VehicleDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Admin> Admins
		{
			get
			{
				return this.GetTable<Admin>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		public System.Data.Linq.Table<Xe> Xes
		{
			get
			{
				return this.GetTable<Xe>();
			}
		}
		
		public System.Data.Linq.Table<DongXe> DongXes
		{
			get
			{
				return this.GetTable<DongXe>();
			}
		}
		
		public System.Data.Linq.Table<HangXe> HangXes
		{
			get
			{
				return this.GetTable<HangXe>();
			}
		}
		
		public System.Data.Linq.Table<ThongSo> ThongSos
		{
			get
			{
				return this.GetTable<ThongSo>();
			}
		}
		
		public System.Data.Linq.Table<DonDatHang> DonDatHangs
		{
			get
			{
				return this.GetTable<DonDatHang>();
			}
		}
		
		public System.Data.Linq.Table<CTDDH> CTDDHs
		{
			get
			{
				return this.GetTable<CTDDH>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Admin")]
	public partial class Admin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _id;
		
		private string _password;
		
		private string _HoTen;
		
		private string _DiaChi;
		
		private string _DienThoai;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(string value);
    partial void OnidChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OnHoTenChanging(string value);
    partial void OnHoTenChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnDienThoaiChanging(string value);
    partial void OnDienThoaiChanged();
    #endregion
		
		public Admin()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTen", DbType="NVarChar(50)")]
		public string HoTen
		{
			get
			{
				return this._HoTen;
			}
			set
			{
				if ((this._HoTen != value))
				{
					this.OnHoTenChanging(value);
					this.SendPropertyChanging();
					this._HoTen = value;
					this.SendPropertyChanged("HoTen");
					this.OnHoTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DienThoai", DbType="VarChar(11) NOT NULL", CanBeNull=false)]
		public string DienThoai
		{
			get
			{
				return this._DienThoai;
			}
			set
			{
				if ((this._DienThoai != value))
				{
					this.OnDienThoaiChanging(value);
					this.SendPropertyChanging();
					this._DienThoai = value;
					this.SendPropertyChanged("DienThoai");
					this.OnDienThoaiChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[User]")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _User1;
		
		private string _Password;
		
		private string _HoVaTen;
		
		private System.DateTime _NgaySinh;
		
		private bool _GioiTinh;
		
		private System.DateTime _NgayDK;
		
		private string _QueQuan;
		
		private string _SDT;
		
		private string _DiaChiThuongTru;
		
		private string _Email;
		
		private string _AnhDaiDien;
		
		private EntitySet<DonDatHang> _DonDatHangs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUser1Changing(string value);
    partial void OnUser1Changed();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnHoVaTenChanging(string value);
    partial void OnHoVaTenChanged();
    partial void OnNgaySinhChanging(System.DateTime value);
    partial void OnNgaySinhChanged();
    partial void OnGioiTinhChanging(bool value);
    partial void OnGioiTinhChanged();
    partial void OnNgayDKChanging(System.DateTime value);
    partial void OnNgayDKChanged();
    partial void OnQueQuanChanging(string value);
    partial void OnQueQuanChanged();
    partial void OnSDTChanging(string value);
    partial void OnSDTChanged();
    partial void OnDiaChiThuongTruChanging(string value);
    partial void OnDiaChiThuongTruChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnAnhDaiDienChanging(string value);
    partial void OnAnhDaiDienChanged();
    #endregion
		
		public User()
		{
			this._DonDatHangs = new EntitySet<DonDatHang>(new Action<DonDatHang>(this.attach_DonDatHangs), new Action<DonDatHang>(this.detach_DonDatHangs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[User]", Storage="_User1", DbType="NVarChar(30) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string User1
		{
			get
			{
				return this._User1;
			}
			set
			{
				if ((this._User1 != value))
				{
					this.OnUser1Changing(value);
					this.SendPropertyChanging();
					this._User1 = value;
					this.SendPropertyChanged("User1");
					this.OnUser1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoVaTen", DbType="NVarChar(30)")]
		public string HoVaTen
		{
			get
			{
				return this._HoVaTen;
			}
			set
			{
				if ((this._HoVaTen != value))
				{
					this.OnHoVaTenChanging(value);
					this.SendPropertyChanging();
					this._HoVaTen = value;
					this.SendPropertyChanged("HoVaTen");
					this.OnHoVaTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgaySinh", DbType="Date NOT NULL")]
		public System.DateTime NgaySinh
		{
			get
			{
				return this._NgaySinh;
			}
			set
			{
				if ((this._NgaySinh != value))
				{
					this.OnNgaySinhChanging(value);
					this.SendPropertyChanging();
					this._NgaySinh = value;
					this.SendPropertyChanged("NgaySinh");
					this.OnNgaySinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GioiTinh", DbType="Bit NOT NULL")]
		public bool GioiTinh
		{
			get
			{
				return this._GioiTinh;
			}
			set
			{
				if ((this._GioiTinh != value))
				{
					this.OnGioiTinhChanging(value);
					this.SendPropertyChanging();
					this._GioiTinh = value;
					this.SendPropertyChanged("GioiTinh");
					this.OnGioiTinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayDK", DbType="Date NOT NULL")]
		public System.DateTime NgayDK
		{
			get
			{
				return this._NgayDK;
			}
			set
			{
				if ((this._NgayDK != value))
				{
					this.OnNgayDKChanging(value);
					this.SendPropertyChanging();
					this._NgayDK = value;
					this.SendPropertyChanged("NgayDK");
					this.OnNgayDKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QueQuan", DbType="NVarChar(100)")]
		public string QueQuan
		{
			get
			{
				return this._QueQuan;
			}
			set
			{
				if ((this._QueQuan != value))
				{
					this.OnQueQuanChanging(value);
					this.SendPropertyChanging();
					this._QueQuan = value;
					this.SendPropertyChanged("QueQuan");
					this.OnQueQuanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="VarChar(11) NOT NULL", CanBeNull=false)]
		public string SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChiThuongTru", DbType="NVarChar(300)")]
		public string DiaChiThuongTru
		{
			get
			{
				return this._DiaChiThuongTru;
			}
			set
			{
				if ((this._DiaChiThuongTru != value))
				{
					this.OnDiaChiThuongTruChanging(value);
					this.SendPropertyChanging();
					this._DiaChiThuongTru = value;
					this.SendPropertyChanged("DiaChiThuongTru");
					this.OnDiaChiThuongTruChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnhDaiDien", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string AnhDaiDien
		{
			get
			{
				return this._AnhDaiDien;
			}
			set
			{
				if ((this._AnhDaiDien != value))
				{
					this.OnAnhDaiDienChanging(value);
					this.SendPropertyChanging();
					this._AnhDaiDien = value;
					this.SendPropertyChanged("AnhDaiDien");
					this.OnAnhDaiDienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_DonDatHang", Storage="_DonDatHangs", ThisKey="User1", OtherKey="KhachHang")]
		public EntitySet<DonDatHang> DonDatHangs
		{
			get
			{
				return this._DonDatHangs;
			}
			set
			{
				this._DonDatHangs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DonDatHangs(DonDatHang entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_DonDatHangs(DonDatHang entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Xe")]
	public partial class Xe : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaXe;
		
		private string _TenXe;
		
		private int _DongXe;
		
		private System.DateTime _NamSX;
		
		private System.Nullable<int> _KhuyenMai;
		
		private long _ThanhTien;
		
		private System.Nullable<System.DateTime> _NgayBan;
		
		private string _MoTa;
		
		private System.DateTime _NgayDang;
		
		private string _HinhAnh;
		
		private EntitySet<ThongSo> _ThongSos;
		
		private EntitySet<CTDDH> _CTDDHs;
		
		private EntityRef<DongXe> _DongXe1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaXeChanging(int value);
    partial void OnMaXeChanged();
    partial void OnTenXeChanging(string value);
    partial void OnTenXeChanged();
    partial void OnDongXeChanging(int value);
    partial void OnDongXeChanged();
    partial void OnNamSXChanging(System.DateTime value);
    partial void OnNamSXChanged();
    partial void OnKhuyenMaiChanging(System.Nullable<int> value);
    partial void OnKhuyenMaiChanged();
    partial void OnThanhTienChanging(long value);
    partial void OnThanhTienChanged();
    partial void OnNgayBanChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayBanChanged();
    partial void OnMoTaChanging(string value);
    partial void OnMoTaChanged();
    partial void OnNgayDangChanging(System.DateTime value);
    partial void OnNgayDangChanged();
    partial void OnHinhAnhChanging(string value);
    partial void OnHinhAnhChanged();
    #endregion
		
		public Xe()
		{
			this._ThongSos = new EntitySet<ThongSo>(new Action<ThongSo>(this.attach_ThongSos), new Action<ThongSo>(this.detach_ThongSos));
			this._CTDDHs = new EntitySet<CTDDH>(new Action<CTDDH>(this.attach_CTDDHs), new Action<CTDDH>(this.detach_CTDDHs));
			this._DongXe1 = default(EntityRef<DongXe>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaXe", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaXe
		{
			get
			{
				return this._MaXe;
			}
			set
			{
				if ((this._MaXe != value))
				{
					this.OnMaXeChanging(value);
					this.SendPropertyChanging();
					this._MaXe = value;
					this.SendPropertyChanged("MaXe");
					this.OnMaXeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenXe", DbType="NVarChar(400) NOT NULL", CanBeNull=false)]
		public string TenXe
		{
			get
			{
				return this._TenXe;
			}
			set
			{
				if ((this._TenXe != value))
				{
					this.OnTenXeChanging(value);
					this.SendPropertyChanging();
					this._TenXe = value;
					this.SendPropertyChanged("TenXe");
					this.OnTenXeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DongXe", DbType="Int NOT NULL")]
		public int DongXe
		{
			get
			{
				return this._DongXe;
			}
			set
			{
				if ((this._DongXe != value))
				{
					if (this._DongXe1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDongXeChanging(value);
					this.SendPropertyChanging();
					this._DongXe = value;
					this.SendPropertyChanged("DongXe");
					this.OnDongXeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NamSX", DbType="Date NOT NULL")]
		public System.DateTime NamSX
		{
			get
			{
				return this._NamSX;
			}
			set
			{
				if ((this._NamSX != value))
				{
					this.OnNamSXChanging(value);
					this.SendPropertyChanging();
					this._NamSX = value;
					this.SendPropertyChanged("NamSX");
					this.OnNamSXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KhuyenMai", DbType="Int")]
		public System.Nullable<int> KhuyenMai
		{
			get
			{
				return this._KhuyenMai;
			}
			set
			{
				if ((this._KhuyenMai != value))
				{
					this.OnKhuyenMaiChanging(value);
					this.SendPropertyChanging();
					this._KhuyenMai = value;
					this.SendPropertyChanged("KhuyenMai");
					this.OnKhuyenMaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThanhTien", DbType="BigInt NOT NULL")]
		public long ThanhTien
		{
			get
			{
				return this._ThanhTien;
			}
			set
			{
				if ((this._ThanhTien != value))
				{
					this.OnThanhTienChanging(value);
					this.SendPropertyChanging();
					this._ThanhTien = value;
					this.SendPropertyChanged("ThanhTien");
					this.OnThanhTienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayBan", DbType="Date")]
		public System.Nullable<System.DateTime> NgayBan
		{
			get
			{
				return this._NgayBan;
			}
			set
			{
				if ((this._NgayBan != value))
				{
					this.OnNgayBanChanging(value);
					this.SendPropertyChanging();
					this._NgayBan = value;
					this.SendPropertyChanged("NgayBan");
					this.OnNgayBanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoTa", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string MoTa
		{
			get
			{
				return this._MoTa;
			}
			set
			{
				if ((this._MoTa != value))
				{
					this.OnMoTaChanging(value);
					this.SendPropertyChanging();
					this._MoTa = value;
					this.SendPropertyChanged("MoTa");
					this.OnMoTaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayDang", DbType="Date NOT NULL")]
		public System.DateTime NgayDang
		{
			get
			{
				return this._NgayDang;
			}
			set
			{
				if ((this._NgayDang != value))
				{
					this.OnNgayDangChanging(value);
					this.SendPropertyChanging();
					this._NgayDang = value;
					this.SendPropertyChanged("NgayDang");
					this.OnNgayDangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HinhAnh", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string HinhAnh
		{
			get
			{
				return this._HinhAnh;
			}
			set
			{
				if ((this._HinhAnh != value))
				{
					this.OnHinhAnhChanging(value);
					this.SendPropertyChanging();
					this._HinhAnh = value;
					this.SendPropertyChanged("HinhAnh");
					this.OnHinhAnhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Xe_ThongSo", Storage="_ThongSos", ThisKey="MaXe", OtherKey="MaXe")]
		public EntitySet<ThongSo> ThongSos
		{
			get
			{
				return this._ThongSos;
			}
			set
			{
				this._ThongSos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Xe_CTDDH", Storage="_CTDDHs", ThisKey="MaXe", OtherKey="Xe")]
		public EntitySet<CTDDH> CTDDHs
		{
			get
			{
				return this._CTDDHs;
			}
			set
			{
				this._CTDDHs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DongXe_Xe", Storage="_DongXe1", ThisKey="DongXe", OtherKey="MaDongXe", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public DongXe DongXe1
		{
			get
			{
				return this._DongXe1.Entity;
			}
			set
			{
				DongXe previousValue = this._DongXe1.Entity;
				if (((previousValue != value) 
							|| (this._DongXe1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DongXe1.Entity = null;
						previousValue.Xes.Remove(this);
					}
					this._DongXe1.Entity = value;
					if ((value != null))
					{
						value.Xes.Add(this);
						this._DongXe = value.MaDongXe;
					}
					else
					{
						this._DongXe = default(int);
					}
					this.SendPropertyChanged("DongXe1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ThongSos(ThongSo entity)
		{
			this.SendPropertyChanging();
			entity.Xe = this;
		}
		
		private void detach_ThongSos(ThongSo entity)
		{
			this.SendPropertyChanging();
			entity.Xe = null;
		}
		
		private void attach_CTDDHs(CTDDH entity)
		{
			this.SendPropertyChanging();
			entity.Xe1 = this;
		}
		
		private void detach_CTDDHs(CTDDH entity)
		{
			this.SendPropertyChanging();
			entity.Xe1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DongXe")]
	public partial class DongXe : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaDongXe;
		
		private int _MaHangXe;
		
		private string _TenDongXe;
		
		private EntitySet<Xe> _Xes;
		
		private EntityRef<HangXe> _HangXe;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaDongXeChanging(int value);
    partial void OnMaDongXeChanged();
    partial void OnMaHangXeChanging(int value);
    partial void OnMaHangXeChanged();
    partial void OnTenDongXeChanging(string value);
    partial void OnTenDongXeChanged();
    #endregion
		
		public DongXe()
		{
			this._Xes = new EntitySet<Xe>(new Action<Xe>(this.attach_Xes), new Action<Xe>(this.detach_Xes));
			this._HangXe = default(EntityRef<HangXe>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDongXe", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaDongXe
		{
			get
			{
				return this._MaDongXe;
			}
			set
			{
				if ((this._MaDongXe != value))
				{
					this.OnMaDongXeChanging(value);
					this.SendPropertyChanging();
					this._MaDongXe = value;
					this.SendPropertyChanged("MaDongXe");
					this.OnMaDongXeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHangXe", DbType="Int NOT NULL")]
		public int MaHangXe
		{
			get
			{
				return this._MaHangXe;
			}
			set
			{
				if ((this._MaHangXe != value))
				{
					if (this._HangXe.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaHangXeChanging(value);
					this.SendPropertyChanging();
					this._MaHangXe = value;
					this.SendPropertyChanged("MaHangXe");
					this.OnMaHangXeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenDongXe", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string TenDongXe
		{
			get
			{
				return this._TenDongXe;
			}
			set
			{
				if ((this._TenDongXe != value))
				{
					this.OnTenDongXeChanging(value);
					this.SendPropertyChanging();
					this._TenDongXe = value;
					this.SendPropertyChanged("TenDongXe");
					this.OnTenDongXeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DongXe_Xe", Storage="_Xes", ThisKey="MaDongXe", OtherKey="DongXe")]
		public EntitySet<Xe> Xes
		{
			get
			{
				return this._Xes;
			}
			set
			{
				this._Xes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HangXe_DongXe", Storage="_HangXe", ThisKey="MaHangXe", OtherKey="MaHX", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public HangXe HangXe
		{
			get
			{
				return this._HangXe.Entity;
			}
			set
			{
				HangXe previousValue = this._HangXe.Entity;
				if (((previousValue != value) 
							|| (this._HangXe.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HangXe.Entity = null;
						previousValue.DongXes.Remove(this);
					}
					this._HangXe.Entity = value;
					if ((value != null))
					{
						value.DongXes.Add(this);
						this._MaHangXe = value.MaHX;
					}
					else
					{
						this._MaHangXe = default(int);
					}
					this.SendPropertyChanged("HangXe");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Xes(Xe entity)
		{
			this.SendPropertyChanging();
			entity.DongXe1 = this;
		}
		
		private void detach_Xes(Xe entity)
		{
			this.SendPropertyChanging();
			entity.DongXe1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HangXe")]
	public partial class HangXe : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaHX;
		
		private string _TenHX;
		
		private string _QuocGia;
		
		private string _Logo;
		
		private EntitySet<DongXe> _DongXes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaHXChanging(int value);
    partial void OnMaHXChanged();
    partial void OnTenHXChanging(string value);
    partial void OnTenHXChanged();
    partial void OnQuocGiaChanging(string value);
    partial void OnQuocGiaChanged();
    partial void OnLogoChanging(string value);
    partial void OnLogoChanged();
    #endregion
		
		public HangXe()
		{
			this._DongXes = new EntitySet<DongXe>(new Action<DongXe>(this.attach_DongXes), new Action<DongXe>(this.detach_DongXes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHX", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaHX
		{
			get
			{
				return this._MaHX;
			}
			set
			{
				if ((this._MaHX != value))
				{
					this.OnMaHXChanging(value);
					this.SendPropertyChanging();
					this._MaHX = value;
					this.SendPropertyChanged("MaHX");
					this.OnMaHXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenHX", DbType="NVarChar(60) NOT NULL", CanBeNull=false)]
		public string TenHX
		{
			get
			{
				return this._TenHX;
			}
			set
			{
				if ((this._TenHX != value))
				{
					this.OnTenHXChanging(value);
					this.SendPropertyChanging();
					this._TenHX = value;
					this.SendPropertyChanged("TenHX");
					this.OnTenHXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuocGia", DbType="NVarChar(50)")]
		public string QuocGia
		{
			get
			{
				return this._QuocGia;
			}
			set
			{
				if ((this._QuocGia != value))
				{
					this.OnQuocGiaChanging(value);
					this.SendPropertyChanging();
					this._QuocGia = value;
					this.SendPropertyChanged("QuocGia");
					this.OnQuocGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Logo", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Logo
		{
			get
			{
				return this._Logo;
			}
			set
			{
				if ((this._Logo != value))
				{
					this.OnLogoChanging(value);
					this.SendPropertyChanging();
					this._Logo = value;
					this.SendPropertyChanged("Logo");
					this.OnLogoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HangXe_DongXe", Storage="_DongXes", ThisKey="MaHX", OtherKey="MaHangXe")]
		public EntitySet<DongXe> DongXes
		{
			get
			{
				return this._DongXes;
			}
			set
			{
				this._DongXes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DongXes(DongXe entity)
		{
			this.SendPropertyChanging();
			entity.HangXe = this;
		}
		
		private void detach_DongXes(DongXe entity)
		{
			this.SendPropertyChanging();
			entity.HangXe = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ThongSo")]
	public partial class ThongSo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaThongSo;
		
		private System.Nullable<int> _MaXe;
		
		private string _TenThongSo;
		
		private string _ThongSo1;
		
		private EntityRef<Xe> _Xe;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaThongSoChanging(int value);
    partial void OnMaThongSoChanged();
    partial void OnMaXeChanging(System.Nullable<int> value);
    partial void OnMaXeChanged();
    partial void OnTenThongSoChanging(string value);
    partial void OnTenThongSoChanged();
    partial void OnThongSo1Changing(string value);
    partial void OnThongSo1Changed();
    #endregion
		
		public ThongSo()
		{
			this._Xe = default(EntityRef<Xe>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaThongSo", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaThongSo
		{
			get
			{
				return this._MaThongSo;
			}
			set
			{
				if ((this._MaThongSo != value))
				{
					this.OnMaThongSoChanging(value);
					this.SendPropertyChanging();
					this._MaThongSo = value;
					this.SendPropertyChanged("MaThongSo");
					this.OnMaThongSoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaXe", DbType="Int")]
		public System.Nullable<int> MaXe
		{
			get
			{
				return this._MaXe;
			}
			set
			{
				if ((this._MaXe != value))
				{
					if (this._Xe.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaXeChanging(value);
					this.SendPropertyChanging();
					this._MaXe = value;
					this.SendPropertyChanged("MaXe");
					this.OnMaXeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenThongSo", DbType="NVarChar(50)")]
		public string TenThongSo
		{
			get
			{
				return this._TenThongSo;
			}
			set
			{
				if ((this._TenThongSo != value))
				{
					this.OnTenThongSoChanging(value);
					this.SendPropertyChanging();
					this._TenThongSo = value;
					this.SendPropertyChanged("TenThongSo");
					this.OnTenThongSoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ThongSo", Storage="_ThongSo1", DbType="NVarChar(50)")]
		public string ThongSo1
		{
			get
			{
				return this._ThongSo1;
			}
			set
			{
				if ((this._ThongSo1 != value))
				{
					this.OnThongSo1Changing(value);
					this.SendPropertyChanging();
					this._ThongSo1 = value;
					this.SendPropertyChanged("ThongSo1");
					this.OnThongSo1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Xe_ThongSo", Storage="_Xe", ThisKey="MaXe", OtherKey="MaXe", IsForeignKey=true, DeleteRule="CASCADE")]
		public Xe Xe
		{
			get
			{
				return this._Xe.Entity;
			}
			set
			{
				Xe previousValue = this._Xe.Entity;
				if (((previousValue != value) 
							|| (this._Xe.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Xe.Entity = null;
						previousValue.ThongSos.Remove(this);
					}
					this._Xe.Entity = value;
					if ((value != null))
					{
						value.ThongSos.Add(this);
						this._MaXe = value.MaXe;
					}
					else
					{
						this._MaXe = default(Nullable<int>);
					}
					this.SendPropertyChanged("Xe");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DonDatHang")]
	public partial class DonDatHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SoDDH;
		
		private System.DateTime _NgayDat;
		
		private bool _DaThanhToan;
		
		private bool _DaGiaoHang;
		
		private string _KhachHang;
		
		private System.DateTime _NgayGiao;
		
		private EntitySet<CTDDH> _CTDDHs;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSoDDHChanging(int value);
    partial void OnSoDDHChanged();
    partial void OnNgayDatChanging(System.DateTime value);
    partial void OnNgayDatChanged();
    partial void OnDaThanhToanChanging(bool value);
    partial void OnDaThanhToanChanged();
    partial void OnDaGiaoHangChanging(bool value);
    partial void OnDaGiaoHangChanged();
    partial void OnKhachHangChanging(string value);
    partial void OnKhachHangChanged();
    partial void OnNgayGiaoChanging(System.DateTime value);
    partial void OnNgayGiaoChanged();
    #endregion
		
		public DonDatHang()
		{
			this._CTDDHs = new EntitySet<CTDDH>(new Action<CTDDH>(this.attach_CTDDHs), new Action<CTDDH>(this.detach_CTDDHs));
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoDDH", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SoDDH
		{
			get
			{
				return this._SoDDH;
			}
			set
			{
				if ((this._SoDDH != value))
				{
					this.OnSoDDHChanging(value);
					this.SendPropertyChanging();
					this._SoDDH = value;
					this.SendPropertyChanged("SoDDH");
					this.OnSoDDHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayDat", DbType="DateTime NOT NULL")]
		public System.DateTime NgayDat
		{
			get
			{
				return this._NgayDat;
			}
			set
			{
				if ((this._NgayDat != value))
				{
					this.OnNgayDatChanging(value);
					this.SendPropertyChanging();
					this._NgayDat = value;
					this.SendPropertyChanged("NgayDat");
					this.OnNgayDatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DaThanhToan", DbType="Bit NOT NULL")]
		public bool DaThanhToan
		{
			get
			{
				return this._DaThanhToan;
			}
			set
			{
				if ((this._DaThanhToan != value))
				{
					this.OnDaThanhToanChanging(value);
					this.SendPropertyChanging();
					this._DaThanhToan = value;
					this.SendPropertyChanged("DaThanhToan");
					this.OnDaThanhToanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DaGiaoHang", DbType="Bit NOT NULL")]
		public bool DaGiaoHang
		{
			get
			{
				return this._DaGiaoHang;
			}
			set
			{
				if ((this._DaGiaoHang != value))
				{
					this.OnDaGiaoHangChanging(value);
					this.SendPropertyChanging();
					this._DaGiaoHang = value;
					this.SendPropertyChanged("DaGiaoHang");
					this.OnDaGiaoHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KhachHang", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string KhachHang
		{
			get
			{
				return this._KhachHang;
			}
			set
			{
				if ((this._KhachHang != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnKhachHangChanging(value);
					this.SendPropertyChanging();
					this._KhachHang = value;
					this.SendPropertyChanged("KhachHang");
					this.OnKhachHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayGiao", DbType="DateTime NOT NULL")]
		public System.DateTime NgayGiao
		{
			get
			{
				return this._NgayGiao;
			}
			set
			{
				if ((this._NgayGiao != value))
				{
					this.OnNgayGiaoChanging(value);
					this.SendPropertyChanging();
					this._NgayGiao = value;
					this.SendPropertyChanged("NgayGiao");
					this.OnNgayGiaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DonDatHang_CTDDH", Storage="_CTDDHs", ThisKey="SoDDH", OtherKey="SoDDH")]
		public EntitySet<CTDDH> CTDDHs
		{
			get
			{
				return this._CTDDHs;
			}
			set
			{
				this._CTDDHs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_DonDatHang", Storage="_User", ThisKey="KhachHang", OtherKey="User1", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.DonDatHangs.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.DonDatHangs.Add(this);
						this._KhachHang = value.User1;
					}
					else
					{
						this._KhachHang = default(string);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CTDDHs(CTDDH entity)
		{
			this.SendPropertyChanging();
			entity.DonDatHang = this;
		}
		
		private void detach_CTDDHs(CTDDH entity)
		{
			this.SendPropertyChanging();
			entity.DonDatHang = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CTDDH")]
	public partial class CTDDH : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SoDDH;
		
		private int _Xe;
		
		private int _SoLuong;
		
		private int _DonGia;
		
		private int _KhuyenMai;
		
		private long _ThanhTien;
		
		private EntityRef<DonDatHang> _DonDatHang;
		
		private EntityRef<Xe> _Xe1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSoDDHChanging(int value);
    partial void OnSoDDHChanged();
    partial void OnXeChanging(int value);
    partial void OnXeChanged();
    partial void OnSoLuongChanging(int value);
    partial void OnSoLuongChanged();
    partial void OnDonGiaChanging(int value);
    partial void OnDonGiaChanged();
    partial void OnKhuyenMaiChanging(int value);
    partial void OnKhuyenMaiChanged();
    partial void OnThanhTienChanging(long value);
    partial void OnThanhTienChanged();
    #endregion
		
		public CTDDH()
		{
			this._DonDatHang = default(EntityRef<DonDatHang>);
			this._Xe1 = default(EntityRef<Xe>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoDDH", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SoDDH
		{
			get
			{
				return this._SoDDH;
			}
			set
			{
				if ((this._SoDDH != value))
				{
					if (this._DonDatHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSoDDHChanging(value);
					this.SendPropertyChanging();
					this._SoDDH = value;
					this.SendPropertyChanged("SoDDH");
					this.OnSoDDHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Xe", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Xe
		{
			get
			{
				return this._Xe;
			}
			set
			{
				if ((this._Xe != value))
				{
					if (this._Xe1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnXeChanging(value);
					this.SendPropertyChanging();
					this._Xe = value;
					this.SendPropertyChanged("Xe");
					this.OnXeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuong", DbType="Int NOT NULL")]
		public int SoLuong
		{
			get
			{
				return this._SoLuong;
			}
			set
			{
				if ((this._SoLuong != value))
				{
					this.OnSoLuongChanging(value);
					this.SendPropertyChanging();
					this._SoLuong = value;
					this.SendPropertyChanged("SoLuong");
					this.OnSoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DonGia", DbType="Int NOT NULL")]
		public int DonGia
		{
			get
			{
				return this._DonGia;
			}
			set
			{
				if ((this._DonGia != value))
				{
					this.OnDonGiaChanging(value);
					this.SendPropertyChanging();
					this._DonGia = value;
					this.SendPropertyChanged("DonGia");
					this.OnDonGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KhuyenMai", DbType="Int NOT NULL")]
		public int KhuyenMai
		{
			get
			{
				return this._KhuyenMai;
			}
			set
			{
				if ((this._KhuyenMai != value))
				{
					this.OnKhuyenMaiChanging(value);
					this.SendPropertyChanging();
					this._KhuyenMai = value;
					this.SendPropertyChanged("KhuyenMai");
					this.OnKhuyenMaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThanhTien", DbType="BigInt NOT NULL")]
		public long ThanhTien
		{
			get
			{
				return this._ThanhTien;
			}
			set
			{
				if ((this._ThanhTien != value))
				{
					this.OnThanhTienChanging(value);
					this.SendPropertyChanging();
					this._ThanhTien = value;
					this.SendPropertyChanged("ThanhTien");
					this.OnThanhTienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DonDatHang_CTDDH", Storage="_DonDatHang", ThisKey="SoDDH", OtherKey="SoDDH", IsForeignKey=true)]
		public DonDatHang DonDatHang
		{
			get
			{
				return this._DonDatHang.Entity;
			}
			set
			{
				DonDatHang previousValue = this._DonDatHang.Entity;
				if (((previousValue != value) 
							|| (this._DonDatHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DonDatHang.Entity = null;
						previousValue.CTDDHs.Remove(this);
					}
					this._DonDatHang.Entity = value;
					if ((value != null))
					{
						value.CTDDHs.Add(this);
						this._SoDDH = value.SoDDH;
					}
					else
					{
						this._SoDDH = default(int);
					}
					this.SendPropertyChanged("DonDatHang");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Xe_CTDDH", Storage="_Xe1", ThisKey="Xe", OtherKey="MaXe", IsForeignKey=true)]
		public Xe Xe1
		{
			get
			{
				return this._Xe1.Entity;
			}
			set
			{
				Xe previousValue = this._Xe1.Entity;
				if (((previousValue != value) 
							|| (this._Xe1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Xe1.Entity = null;
						previousValue.CTDDHs.Remove(this);
					}
					this._Xe1.Entity = value;
					if ((value != null))
					{
						value.CTDDHs.Add(this);
						this._Xe = value.MaXe;
					}
					else
					{
						this._Xe = default(int);
					}
					this.SendPropertyChanged("Xe1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
